spring:
  rabbitmq:
    addresses: localhost
    port: 5672

  cloud:
    function:
      definition: consumeNotification
    stream:
      bindings:
        consumeNotification-in-0:
          destination: case.import
        publishMerge-out-0:
          destination: merge
      source: publishMerge

  datasource:
    url: ${dbApi}:${dbVendor}://${hostPort}/${dbName}${query}
    username: ${login}
    password: ${password}

  jpa:
    database: POSTGRESQL
    hibernate:
      ddl-auto: validate
      naming:
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
        implicit-strategy: org.hibernate.boot.model.naming.ImplicitNamingStrategyJpaCompliantImpl
    properties:
      dialect: org.hibernate.dialect.PostgreSQLDialect
      hibernate:
        format_sql: true
        # Used when action: create is uncommented
        hbm2ddl:
          delimiter: ;
      # Uncomment action to automatically generate the database sql schema file
      javax:
        persistence:
          schema-generation:
            scripts:
              #action: create
              create-target: src/main/resources/merge_orchestrator.sql
              create-source: metadata

springdoc:
  swagger-ui:
    path: swagger-ui.html

server:
  port: 5020
  forward-headers-strategy: framework

backing-services:
  case-server:
    base-uri: http://localhost:5000
  balances-adjustment-server:
    base-uri: http://localhost:5010
  loadflow-server:
    base-uri: http://localhost:5008
  case-validation-server:
    base-uri: http://localhost:5011
  cgmes-boundary-server:
    base-uri: http://localhost:5021
  network-conversion:
    base-uri: http://localhost:5003
  report-server:
    base-uri: http://localhost:5028

network-store-server:
  preloading-strategy: COLLECTION
  base-uri: http://localhost:8080/

dbName: merge_orchestrator
dbApi: jdbc

logging:
  level:
    ROOT: INFO

parameters:
  tsos: FR,ES,PT
  process: SWE
  run-balances-adjustment: false

